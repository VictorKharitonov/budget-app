{
  "name": "bot-lambda",
  "type": "module",
  "version": "1.0.0",
  "description": "",
  "main": "src/index.mts",
  "node": "18.16.0",
  "npm": "8.5.0",
  "scripts": {
    "start": "npm run build:lambda && DOTENV_CONFIG_PATH=../../.env node -r dotenv/config dist/index.js",
    "start:dev": "DOTENV_CONFIG_PATH=../../.env nodemon -r dotenv/config src/index.mts",
    "clear-artifacts:lambda": "rimraf ./artifacts/lambda && mkdir -p artifacts/lambda",
    "clear-artifacts:layer": "rimraf ./artifacts/layer && mkdir -p artifacts/layer",
    "build:lambda": "rimraf ./dist && tsc",
    "build:lambda:prod": "npm run build:lambda && npm run clear-artifacts:lambda && (cd dist && zip -r ../artifacts/lambda/lambda-$npm_package_version.zip .)",
    "build:layer:prod": "npm run clear-artifacts:layer && (cd node_modules && zip -r ../artifacts/layer/layer-$npm_package_version.zip .)",
    "build:prod": "npm run build:lambda:prod && npm run build:layer:prod",
    "bump:first-release": "commit-and-tag-version --first-release -m \"release($npm_package_name): release initial version\"",
    "bump:patch": "commit-and-tag-version --release-as patch -t 'bot-lambda.v' -m \"release($npm_package_name): new patch version %s\"",
    "bump:minor": "commit-and-tag-version --release-as minor -t 'bot-lambda.v' -m \"release($npm_package_name): new minor version %s\"",
    "aws:identity": "aws sts get-caller-identity",
    "aws-lambda:create-function": "source ../../.env && aws lambda create-function $AWS_LAMBDA_FUNCTION_NAME $AWS_LAMBDA_FILE $AWS_LAMBDA_HANDLER $AWS_LAMBDA_RUNTIME $AWS_LAMBDA_ROLE",
    "aws-lambda:update-function-code": "source ../../.env && aws lambda update-function-code $AWS_LAMBDA_FUNCTION_NAME $AWS_LAMBDA_FILE",
    "aws-lambda:publish-version": "source ../../.env && aws lambda publish-version $AWS_LAMBDA_FUNCTION_NAME",
    "aws-layer:publish": "source ../../.env && aws lambda publish-layer-version $AWS_LAMBDA_REGION $AWS_LAMBDA_LAYER_NAME $AWS_LAMBDA_LAYER_FILE $AWS_LAMBDA_LAYER_RUNTIME",
    "aws-layer:get-arn": "source ../../.env && aws lambda list-layer-versions $AWS_LAMBDA_LAYER_NAME --max-items 1 | grep 'LayerVersionArn' | cut -d '\"' -f 4",
    "aws-lambda:update-layer": "source ../../.env && aws lambda update-function-configuration $AWS_LAMBDA_FUNCTION_NAME --layers $(npm run aws-layer:get-arn --silent)"
  },
  "author": "Ivan Kuplevich",
  "license": "ISC",
  "dependencies": {
    "telegraf": "^4.12.2"
  }
}
